{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/help-extension/lib/index.js"],"names":["CommandIDs","open","about","activate","close","show","hide","launchClassic","LAB_IS_SECURE","window","location","protocol","app","mainMenu","translator","palette","restorer","inspector","trans","load","counter","category","__","baseUrl","PageConfig","commands","shell","serviceManager","tracker","WidgetTracker","namespace","resources","text","url","sort","a","b","localeCompare","restore","command","args","widget","content","title","label","name","helpMenu","labGroup","map","addGroup","contextualHelpGroup","undefined","resourcesGroup","kernelInfoCache","Map","sessions","runningChanged","connect","m","_a","length","sessionModel","kernel","has","session","connectTo","model","kernelConnectionOptions","handleComms","info","then","kernelInfo","_b","set","usesKernel","result","currentWidget","kernelUsers","forEach","u","getKernel","bannerCommand","spec","kernelspecs","specs","kernelName","display_name","kernelIconUrl","index","indexOf","slice","addCommand","isVisible","isEnabled","execute","headerLogo","src","className","banner","body","showDialog","buttons","Dialog","kernelGroup","help_links","link","commandId","push","dispose","versionNumber","version","versionInfo","jupyterIcon","margin","height","width","jupyterlabWordmarkIcon","externalLinks","href","target","rel","copyright","URLExt","IFrame","sandbox","addClass","id","MainAreaWidget","newHelpWidget","add","addItem","reload","requires","IMainMenu","ITranslator","optional","ICommandPalette","ILayoutRestorer","IInspector","autoStart"],"mappings":"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","file":"715.bundle.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module help-extension\n */\nimport { ILayoutRestorer } from '@jupyterlab/application';\nimport { Dialog, ICommandPalette, IFrame, MainAreaWidget, showDialog, WidgetTracker } from '@jupyterlab/apputils';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { IInspector } from '@jupyterlab/inspector';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { jupyterIcon, jupyterlabWordmarkIcon } from '@jupyterlab/ui-components';\nimport * as React from 'react';\n/**\n * The command IDs used by the help plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.open = 'help:open';\n    CommandIDs.about = 'help:about';\n    CommandIDs.activate = 'help:activate';\n    CommandIDs.close = 'help:close';\n    CommandIDs.show = 'help:show';\n    CommandIDs.hide = 'help:hide';\n    CommandIDs.launchClassic = 'help:launch-classic-notebook';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * A flag denoting whether the application is loaded over HTTPS.\n */\nconst LAB_IS_SECURE = window.location.protocol === 'https:';\n/**\n * The class name added to the help widget.\n */\nconst HELP_CLASS = 'jp-Help';\n/**\n * The help handler extension.\n */\nconst plugin = {\n    activate,\n    id: '@jupyterlab/help-extension:plugin',\n    requires: [IMainMenu, ITranslator],\n    optional: [ICommandPalette, ILayoutRestorer, IInspector],\n    autoStart: true\n};\n/**\n * Export the plugin as default.\n */\nexport default plugin;\n/**\n * Activate the help handler extension.\n *\n * @param app - The phosphide application object.\n *\n * returns A promise that resolves when the extension is activated.\n */\nfunction activate(app, mainMenu, translator, palette, restorer, inspector) {\n    const trans = translator.load('jupyterlab');\n    let counter = 0;\n    const category = trans.__('Help');\n    const namespace = 'help-doc';\n    const baseUrl = PageConfig.getBaseUrl();\n    const { commands, shell, serviceManager } = app;\n    const tracker = new WidgetTracker({ namespace });\n    const resources = [\n        {\n            text: trans.__('JupyterLab Reference'),\n            url: 'https://jupyterlab.readthedocs.io/en/stable/'\n        },\n        {\n            text: trans.__('JupyterLab FAQ'),\n            url: 'https://jupyterlab.readthedocs.io/en/stable/getting_started/faq.html'\n        },\n        {\n            text: trans.__('Jupyter Reference'),\n            url: 'https://jupyter.org/documentation'\n        },\n        {\n            text: trans.__('Markdown Reference'),\n            url: 'https://commonmark.org/help/'\n        }\n    ];\n    resources.sort((a, b) => {\n        return a.text.localeCompare(b.text);\n    });\n    // Handle state restoration.\n    if (restorer) {\n        void restorer.restore(tracker, {\n            command: CommandIDs.open,\n            args: widget => ({\n                url: widget.content.url,\n                text: widget.content.title.label\n            }),\n            name: widget => widget.content.url\n        });\n    }\n    /**\n     * Create a new HelpWidget widget.\n     */\n    function newHelpWidget(url, text) {\n        // Allow scripts and forms so that things like\n        // readthedocs can use their search functionality.\n        // We *don't* allow same origin requests, which\n        // can prevent some content from being loaded onto the\n        // help pages.\n        const content = new IFrame({\n            sandbox: ['allow-scripts', 'allow-forms']\n        });\n        content.url = url;\n        content.addClass(HELP_CLASS);\n        content.title.label = text;\n        content.id = `${namespace}-${++counter}`;\n        const widget = new MainAreaWidget({ content });\n        widget.addClass('jp-Help');\n        return widget;\n    }\n    // Populate the Help menu.\n    const helpMenu = mainMenu.helpMenu;\n    const labGroup = [\n        CommandIDs.about,\n        CommandIDs.launchClassic\n    ].map(command => ({ command }));\n    helpMenu.addGroup(labGroup, 0);\n    // Contextual help in its own group\n    const contextualHelpGroup = [\n        inspector ? 'inspector:open' : undefined\n    ].map(command => ({ command }));\n    helpMenu.addGroup(contextualHelpGroup, 0);\n    const resourcesGroup = resources.map(args => ({\n        args,\n        command: CommandIDs.open\n    }));\n    helpMenu.addGroup(resourcesGroup, 10);\n    // Generate a cache of the kernel help links.\n    const kernelInfoCache = new Map();\n    serviceManager.sessions.runningChanged.connect((m, sessions) => {\n        var _a;\n        // If a new session has been added, it is at the back\n        // of the session list. If one has changed or stopped,\n        // it does not hurt to check it.\n        if (!sessions.length) {\n            return;\n        }\n        const sessionModel = sessions[sessions.length - 1];\n        if (!sessionModel.kernel || kernelInfoCache.has(sessionModel.kernel.name)) {\n            return;\n        }\n        const session = serviceManager.sessions.connectTo({\n            model: sessionModel,\n            kernelConnectionOptions: { handleComms: false }\n        });\n        void ((_a = session.kernel) === null || _a === void 0 ? void 0 : _a.info.then(kernelInfo => {\n            var _a, _b;\n            const name = session.kernel.name;\n            // Check the cache second time so that, if two callbacks get scheduled,\n            // they don't try to add the same commands.\n            if (kernelInfoCache.has(name)) {\n                return;\n            }\n            // Set the Kernel Info cache.\n            kernelInfoCache.set(name, kernelInfo);\n            // Utility function to check if the current widget\n            // has registered itself with the help menu.\n            const usesKernel = () => {\n                let result = false;\n                const widget = app.shell.currentWidget;\n                if (!widget) {\n                    return result;\n                }\n                helpMenu.kernelUsers.forEach(u => {\n                    var _a;\n                    if (u.tracker.has(widget) && ((_a = u.getKernel(widget)) === null || _a === void 0 ? void 0 : _a.name) === name) {\n                        result = true;\n                    }\n                });\n                return result;\n            };\n            // Add the kernel banner to the Help Menu.\n            const bannerCommand = `help-menu-${name}:banner`;\n            const spec = (_b = (_a = serviceManager.kernelspecs) === null || _a === void 0 ? void 0 : _a.specs) === null || _b === void 0 ? void 0 : _b.kernelspecs[name];\n            if (!spec) {\n                return;\n            }\n            const kernelName = spec.display_name;\n            let kernelIconUrl = spec.resources['logo-64x64'];\n            if (kernelIconUrl) {\n                const index = kernelIconUrl.indexOf('kernelspecs');\n                kernelIconUrl = baseUrl + kernelIconUrl.slice(index);\n            }\n            commands.addCommand(bannerCommand, {\n                label: trans.__('About the %1 Kernel', kernelName),\n                isVisible: usesKernel,\n                isEnabled: usesKernel,\n                execute: () => {\n                    // Create the header of the about dialog\n                    const headerLogo = React.createElement(\"img\", { src: kernelIconUrl });\n                    const title = (React.createElement(\"span\", { className: \"jp-About-header\" },\n                        headerLogo,\n                        React.createElement(\"div\", { className: \"jp-About-header-info\" }, kernelName)));\n                    const banner = React.createElement(\"pre\", null, kernelInfo.banner);\n                    const body = React.createElement(\"div\", { className: \"jp-About-body\" }, banner);\n                    return showDialog({\n                        title,\n                        body,\n                        buttons: [\n                            Dialog.createButton({\n                                label: trans.__('Dismiss'),\n                                className: 'jp-About-button jp-mod-reject jp-mod-styled'\n                            })\n                        ]\n                    });\n                }\n            });\n            helpMenu.addGroup([{ command: bannerCommand }], 20);\n            // Add the kernel info help_links to the Help menu.\n            const kernelGroup = [];\n            (kernelInfo.help_links || []).forEach(link => {\n                const commandId = `help-menu-${name}:${link.text}`;\n                commands.addCommand(commandId, {\n                    label: link.text,\n                    isVisible: usesKernel,\n                    isEnabled: usesKernel,\n                    execute: () => {\n                        return commands.execute(CommandIDs.open, link);\n                    }\n                });\n                kernelGroup.push({ command: commandId });\n            });\n            helpMenu.addGroup(kernelGroup, 21);\n            // Dispose of the session object since we no longer need it.\n            session.dispose();\n        }));\n    });\n    commands.addCommand(CommandIDs.about, {\n        label: trans.__('About %1', app.name),\n        execute: () => {\n            // Create the header of the about dialog\n            const versionNumber = trans.__('Version %1', app.version);\n            const versionInfo = (React.createElement(\"span\", { className: \"jp-About-version-info\" },\n                React.createElement(\"span\", { className: \"jp-About-version\" }, versionNumber)));\n            const title = (React.createElement(\"span\", { className: \"jp-About-header\" },\n                React.createElement(jupyterIcon.react, { margin: \"7px 9.5px\", height: \"auto\", width: \"58px\" }),\n                React.createElement(\"div\", { className: \"jp-About-header-info\" },\n                    React.createElement(jupyterlabWordmarkIcon.react, { height: \"auto\", width: \"196px\" }),\n                    versionInfo)));\n            // Create the body of the about dialog\n            const jupyterURL = 'https://jupyter.org/about.html';\n            const contributorsURL = 'https://github.com/jupyterlab/jupyterlab/graphs/contributors';\n            const externalLinks = (React.createElement(\"span\", { className: \"jp-About-externalLinks\" },\n                React.createElement(\"a\", { href: contributorsURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('CONTRIBUTOR LIST')),\n                React.createElement(\"a\", { href: jupyterURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('ABOUT PROJECT JUPYTER'))));\n            const copyright = (React.createElement(\"span\", { className: \"jp-About-copyright\" }, trans.__('© 2015-2020 Project Jupyter Contributors')));\n            const body = (React.createElement(\"div\", { className: \"jp-About-body\" },\n                externalLinks,\n                copyright));\n            return showDialog({\n                title,\n                body,\n                buttons: [\n                    Dialog.createButton({\n                        label: trans.__('Dismiss'),\n                        className: 'jp-About-button jp-mod-reject jp-mod-styled'\n                    })\n                ]\n            });\n        }\n    });\n    commands.addCommand(CommandIDs.open, {\n        label: args => args['text'],\n        execute: args => {\n            const url = args['url'];\n            const text = args['text'];\n            const newBrowserTab = args['newBrowserTab'] || false;\n            // If help resource will generate a mixed content error, load externally.\n            if (newBrowserTab ||\n                (LAB_IS_SECURE && URLExt.parse(url).protocol !== 'https:')) {\n                window.open(url);\n                return;\n            }\n            const widget = newHelpWidget(url, text);\n            void tracker.add(widget);\n            shell.add(widget, 'main');\n            return widget;\n        }\n    });\n    commands.addCommand(CommandIDs.launchClassic, {\n        label: trans.__('Launch Classic Notebook'),\n        execute: () => {\n            window.open(PageConfig.getBaseUrl() + 'tree');\n        }\n    });\n    if (palette) {\n        resources.forEach(args => {\n            palette.addItem({ args, command: CommandIDs.open, category });\n        });\n        palette.addItem({\n            args: { reload: true },\n            command: 'apputils:reset',\n            category\n        });\n        palette.addItem({ command: CommandIDs.launchClassic, category });\n    }\n}\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}