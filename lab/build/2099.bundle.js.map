{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror-extension/lib/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/codemirror/theme|lazy|/^\\.\\/.*\\.css$/|groupOptions: {}|namespace object"],"names":["CommandIDs","changeKeyMap","changeTheme","changeMode","find","goToLine","codemirrorSingleton","id","provides","ICodeMirror","activate","app","CodeMirrorSingleton","services","IEditorServices","commands","execute","editorServices","requires","IEditorTracker","ISettingRegistry","ITranslator","optional","IMainMenu","tracker","settingRegistry","translator","codeMirror","mainMenu","trans","load","restored","theme","keyMap","scrollPastEnd","styleActiveLine","styleSelectedText","selectionPointer","lineWiseCopyCut","CodeMirrorEditor","async","updateSettings","settings","_a","_b","_c","_d","_e","get","composite","ensureVimKeymap","filename","updateTracker","forEach","widget","content","editor","setOption","isEnabled","currentWidget","shell","Promise","all","then","changed","connect","catch","reason","console","error","message","widgetAdded","sender","themeMenu","Menu","keyMapMenu","modeMenu","title","label","__","addCommand","args","value","set","isToggled","execCommand","name","spec","Mode","model","mimeType","mime","sort","a","b","aName","bName","localeCompare","mode","indexOf","addItem","command","Object","assign","displayName","settingsMenu","addGroup","type","submenu","viewMenu","editMenu","goToLiners","add","autoStart","editorSyntaxStatus","ILabShell","IStatusBar","labShell","statusBar","item","EditorSyntaxStatus","currentChanged","current","has","registerStatusItem","align","rank","isActive","map","webpackAsyncContext","req","__webpack_require__","o","resolve","e","Error","code","ids","t","keys","module","exports"],"mappings":"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AED,qBAAsB,CACrB,MACA,MAED,kBAAmB,CAClB,MACA,MAED,iBAAkB,CACjB,MACA,MAED,aAAc,CACb,MACA,MAED,gBAAiB,CAChB,MACA,MAED,oBAAqB,CACpB,MACA,KAED,kBAAmB,CAClB,MACA,KAED,gBAAiB,CAChB,MACA,MAED,wBAAyB,CACxB,MACA,MAED,uBAAwB,CACvB,MACA,KAED,2BAA4B,CAC3B,MACA,MAED,iBAAkB,CACjB,MACA,KAED,YAAa,CACZ,MACA,KAED,iBAAkB,CACjB,MACA,MAED,iBAAkB,CACjB,MACA,MAED,gBAAiB,CAChB,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,YAAa,CACZ,MACA,MAED,cAAe,CACd,KACA,MAED,aAAc,CACb,MACA,MAED,qBAAsB,CACrB,MACA,MAED,qBAAsB,CACrB,MACA,MAED,qBAAsB,CACrB,KACA,MAED,sBAAuB,CACtB,MACA,MAED,uBAAwB,CACvB,MACA,KAED,mBAAoB,CACnB,MACA,MAED,iBAAkB,CACjB,MACA,MAED,aAAc,CACb,MACA,MAED,kBAAmB,CAClB,MACA,MAED,kBAAmB,CAClB,MACA,MAED,aAAc,CACb,MACA,MAED,mBAAoB,CACnB,MACA,MAED,8BAA+B,CAC9B,MACA,MAED,gCAAiC,CAChC,MACA,MAED,aAAc,CACb,MACA,MAED,iBAAkB,CACjB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,gBAAiB,CAChB,KACA,MAED,iBAAkB,CACjB,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,KACA,MAED,gBAAiB,CAChB,MACA,OAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOrE,QAAQwE,UAAUtE,MAAK,KAC7B,IAAIuE,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMT,EAAIE,GAAM3H,EAAKkI,EAAI,GAC7B,OAAON,EAAoBG,EAAEG,EAAI,IAAI1E,MAAK,IAClCoE,EAAoBO,EAAEnI,EAAI,KAGnC0H,EAAoBU,KAAO,IAAOrC,OAAOqC,KAAKX,GAC9CC,EAAoB1H,GAAK,MACzBqI,EAAOC,QAAUZ","file":"2099.bundle.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module codemirror-extension\n */\nimport CodeMirror from 'codemirror';\nimport { Menu } from '@lumino/widgets';\nimport { ILabShell } from '@jupyterlab/application';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { IEditorServices } from '@jupyterlab/codeeditor';\nimport { editorServices, EditorSyntaxStatus, CodeMirrorEditor, Mode, ICodeMirror } from '@jupyterlab/codemirror';\nimport { IEditorTracker } from '@jupyterlab/fileeditor';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { IStatusBar } from '@jupyterlab/statusbar';\nimport { ITranslator } from '@jupyterlab/translation';\n/**\n * The command IDs used by the codemirror plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.changeKeyMap = 'codemirror:change-keymap';\n    CommandIDs.changeTheme = 'codemirror:change-theme';\n    CommandIDs.changeMode = 'codemirror:change-mode';\n    CommandIDs.find = 'codemirror:find';\n    CommandIDs.goToLine = 'codemirror:go-to-line';\n})(CommandIDs || (CommandIDs = {}));\n/** The CodeMirror singleton. */\nconst codemirrorSingleton = {\n    id: '@jupyterlab/codemirror-extension:codemirror',\n    provides: ICodeMirror,\n    activate: activateCodeMirror\n};\n/**\n * The editor services.\n */\nconst services = {\n    id: '@jupyterlab/codemirror-extension:services',\n    provides: IEditorServices,\n    activate: activateEditorServices\n};\n/**\n * The editor commands.\n */\nconst commands = {\n    id: '@jupyterlab/codemirror-extension:commands',\n    requires: [IEditorTracker, ISettingRegistry, ITranslator, ICodeMirror],\n    optional: [IMainMenu],\n    activate: activateEditorCommands,\n    autoStart: true\n};\n/**\n * The JupyterLab plugin for the EditorSyntax status item.\n */\nexport const editorSyntaxStatus = {\n    id: '@jupyterlab/codemirror-extension:editor-syntax-status',\n    autoStart: true,\n    requires: [IEditorTracker, ILabShell, ITranslator],\n    optional: [IStatusBar],\n    activate: (app, tracker, labShell, translator, statusBar) => {\n        if (!statusBar) {\n            // Automatically disable if statusbar missing\n            return;\n        }\n        const item = new EditorSyntaxStatus({ commands: app.commands, translator });\n        labShell.currentChanged.connect(() => {\n            const current = labShell.currentWidget;\n            if (current && tracker.has(current) && item.model) {\n                item.model.editor = current.content.editor;\n            }\n        });\n        statusBar.registerStatusItem('@jupyterlab/codemirror-extension:editor-syntax-status', {\n            item,\n            align: 'left',\n            rank: 0,\n            isActive: () => !!labShell.currentWidget &&\n                !!tracker.currentWidget &&\n                labShell.currentWidget === tracker.currentWidget\n        });\n    }\n};\n/**\n * Export the plugins as default.\n */\nconst plugins = [\n    commands,\n    services,\n    editorSyntaxStatus,\n    codemirrorSingleton\n];\nexport default plugins;\n/**\n * The plugin ID used as the key in the setting registry.\n */\nconst id = commands.id;\n/**\n * Set up the editor services.\n */\nfunction activateEditorServices(app) {\n    CodeMirror.prototype.save = () => {\n        void app.commands.execute('docmanager:save');\n    };\n    return editorServices;\n}\n/**\n * Simplest implementation of the CodeMirror singleton provider.\n */\nclass CodeMirrorSingleton {\n    get CodeMirror() {\n        return CodeMirror;\n    }\n    async ensureVimKeymap() {\n        if (!('Vim' in CodeMirror)) {\n            // @ts-expect-error\n            await import('codemirror/keymap/vim.js');\n        }\n    }\n}\n/**\n * Set up the CodeMirror singleton.\n */\nfunction activateCodeMirror(app) {\n    return new CodeMirrorSingleton();\n}\n/**\n * Set up the editor widget menu and commands.\n */\nfunction activateEditorCommands(app, tracker, settingRegistry, translator, codeMirror, mainMenu) {\n    const trans = translator.load('jupyterlab');\n    const { commands, restored } = app;\n    let { theme, keyMap, scrollPastEnd, styleActiveLine, styleSelectedText, selectionPointer, lineWiseCopyCut } = CodeMirrorEditor.defaultConfig;\n    /**\n     * Update the setting values.\n     */\n    async function updateSettings(settings) {\n        var _a, _b, _c, _d, _e;\n        keyMap = settings.get('keyMap').composite || keyMap;\n        // Lazy loading of vim mode\n        if (keyMap === 'vim') {\n            await codeMirror.ensureVimKeymap();\n        }\n        theme = settings.get('theme').composite || theme;\n        // Lazy loading of theme stylesheets\n        if (theme !== 'jupyter' && theme !== 'default') {\n            const filename = theme === 'solarized light' || theme === 'solarized dark'\n                ? 'solarized'\n                : theme;\n            await import(`codemirror/theme/${filename}.css`);\n        }\n        scrollPastEnd = (_a = settings.get('scrollPastEnd').composite) !== null && _a !== void 0 ? _a : scrollPastEnd;\n        styleActiveLine = (_b = settings.get('styleActiveLine').composite) !== null && _b !== void 0 ? _b : styleActiveLine;\n        styleSelectedText = (_c = settings.get('styleSelectedText').composite) !== null && _c !== void 0 ? _c : styleSelectedText;\n        selectionPointer = (_d = settings.get('selectionPointer').composite) !== null && _d !== void 0 ? _d : selectionPointer;\n        lineWiseCopyCut = (_e = settings.get('lineWiseCopyCut').composite) !== null && _e !== void 0 ? _e : lineWiseCopyCut;\n    }\n    /**\n     * Update the settings of the current tracker instances.\n     */\n    function updateTracker() {\n        tracker.forEach(widget => {\n            if (widget.content.editor instanceof CodeMirrorEditor) {\n                const { editor } = widget.content;\n                editor.setOption('keyMap', keyMap);\n                editor.setOption('lineWiseCopyCut', lineWiseCopyCut);\n                editor.setOption('scrollPastEnd', scrollPastEnd);\n                editor.setOption('selectionPointer', selectionPointer);\n                editor.setOption('styleActiveLine', styleActiveLine);\n                editor.setOption('styleSelectedText', styleSelectedText);\n                editor.setOption('theme', theme);\n            }\n        });\n    }\n    // Fetch the initial state of the settings.\n    Promise.all([settingRegistry.load(id), restored])\n        .then(async ([settings]) => {\n        await updateSettings(settings);\n        updateTracker();\n        settings.changed.connect(async () => {\n            await updateSettings(settings);\n            updateTracker();\n        });\n    })\n        .catch((reason) => {\n        console.error(reason.message);\n        updateTracker();\n    });\n    /**\n     * Handle the settings of new widgets.\n     */\n    tracker.widgetAdded.connect((sender, widget) => {\n        if (widget.content.editor instanceof CodeMirrorEditor) {\n            const { editor } = widget.content;\n            editor.setOption('keyMap', keyMap);\n            editor.setOption('lineWiseCopyCut', lineWiseCopyCut);\n            editor.setOption('selectionPointer', selectionPointer);\n            editor.setOption('scrollPastEnd', scrollPastEnd);\n            editor.setOption('styleActiveLine', styleActiveLine);\n            editor.setOption('styleSelectedText', styleSelectedText);\n            editor.setOption('theme', theme);\n        }\n    });\n    /**\n     * A test for whether the tracker has an active widget.\n     */\n    function isEnabled() {\n        return (tracker.currentWidget !== null &&\n            tracker.currentWidget === app.shell.currentWidget);\n    }\n    /**\n     * Create a menu for the editor.\n     */\n    const themeMenu = new Menu({ commands });\n    const keyMapMenu = new Menu({ commands });\n    const modeMenu = new Menu({ commands });\n    themeMenu.title.label = trans.__('Text Editor Theme');\n    keyMapMenu.title.label = trans.__('Text Editor Key Map');\n    modeMenu.title.label = trans.__('Text Editor Syntax Highlighting');\n    commands.addCommand(CommandIDs.changeTheme, {\n        label: args => {\n            if (args['theme'] === 'default') {\n                return trans.__('codemirror');\n            }\n            else {\n                return args['displayName'];\n            }\n        },\n        execute: args => {\n            const key = 'theme';\n            const value = (theme = args['theme'] || theme);\n            return settingRegistry.set(id, key, value).catch((reason) => {\n                console.error(`Failed to set ${id}:${key} - ${reason.message}`);\n            });\n        },\n        isToggled: args => args['theme'] === theme\n    });\n    commands.addCommand(CommandIDs.changeKeyMap, {\n        label: args => {\n            const title = args['displayName'];\n            const keyMap = args['keyMap'];\n            return keyMap === 'sublime' ? trans.__('Sublime Text') : title;\n        },\n        execute: args => {\n            const key = 'keyMap';\n            const value = (keyMap = args['keyMap'] || keyMap);\n            return settingRegistry.set(id, key, value).catch((reason) => {\n                console.error(`Failed to set ${id}:${key} - ${reason.message}`);\n            });\n        },\n        isToggled: args => args['keyMap'] === keyMap\n    });\n    commands.addCommand(CommandIDs.find, {\n        label: trans.__('Find...'),\n        execute: () => {\n            const widget = tracker.currentWidget;\n            if (!widget) {\n                return;\n            }\n            const editor = widget.content.editor;\n            editor.execCommand('find');\n        },\n        isEnabled\n    });\n    commands.addCommand(CommandIDs.goToLine, {\n        label: trans.__('Go to Line...'),\n        execute: () => {\n            const widget = tracker.currentWidget;\n            if (!widget) {\n                return;\n            }\n            const editor = widget.content.editor;\n            editor.execCommand('jumpToLine');\n        },\n        isEnabled\n    });\n    commands.addCommand(CommandIDs.changeMode, {\n        label: args => args['name'],\n        execute: args => {\n            const name = args['name'];\n            const widget = tracker.currentWidget;\n            if (name && widget) {\n                const spec = Mode.findByName(name);\n                if (spec) {\n                    widget.content.model.mimeType = spec.mime;\n                }\n            }\n        },\n        isEnabled,\n        isToggled: args => {\n            const widget = tracker.currentWidget;\n            if (!widget) {\n                return false;\n            }\n            const mime = widget.content.model.mimeType;\n            const spec = Mode.findByMIME(mime);\n            const name = spec && spec.name;\n            return args['name'] === name;\n        }\n    });\n    Mode.getModeInfo()\n        .sort((a, b) => {\n        const aName = a.name || '';\n        const bName = b.name || '';\n        return aName.localeCompare(bName);\n    })\n        .forEach(spec => {\n        // Avoid mode name with a curse word.\n        if (spec.mode.indexOf('brainf') === 0) {\n            return;\n        }\n        modeMenu.addItem({\n            command: CommandIDs.changeMode,\n            args: Object.assign({}, spec) // TODO: Casting to `any` until lumino typings are fixed\n        });\n    });\n    // FIXME-TRANS: Check this is working as expected\n    [\n        ['jupyter', trans.__('jupyter')],\n        ['default', trans.__('default')],\n        ['abcdef', trans.__('abcdef')],\n        ['base16-dark', trans.__('base16-dark')],\n        ['base16-light', trans.__('base16-light')],\n        ['hopscotch', trans.__('hopscotch')],\n        ['material', trans.__('material')],\n        ['mbo', trans.__('mbo')],\n        ['mdn-like', trans.__('mdn-like')],\n        ['seti', trans.__('seti')],\n        ['solarized dark', trans.__('solarized dark')],\n        ['solarized light', trans.__('solarized light')],\n        ['the-matrix', trans.__('the-matrix')],\n        ['xq-light', trans.__('xq-light')],\n        ['zenburn', trans.__('zenburn')]\n    ].forEach(([name, displayName]) => themeMenu.addItem({\n        command: CommandIDs.changeTheme,\n        args: { theme: name, displayName: displayName }\n    }));\n    // FIXME-TRANS: Check this is working as expected\n    [\n        ['default', trans.__('default')],\n        ['sublime', trans.__('sublime')],\n        ['vim', trans.__('vim')],\n        ['emacs', trans.__('emacs')]\n    ].forEach(([name, displayName]) => {\n        keyMapMenu.addItem({\n            command: CommandIDs.changeKeyMap,\n            args: { keyMap: name, displayName: displayName }\n        });\n    });\n    if (mainMenu) {\n        // Add some of the editor settings to the settings menu.\n        mainMenu.settingsMenu.addGroup([\n            { type: 'submenu', submenu: keyMapMenu },\n            { type: 'submenu', submenu: themeMenu }\n        ], 10);\n        // Add the syntax highlighting submenu to the `View` menu.\n        mainMenu.viewMenu.addGroup([{ type: 'submenu', submenu: modeMenu }], 40);\n        // Add go to line capabilities to the edit menu.\n        mainMenu.editMenu.goToLiners.add({\n            tracker,\n            goToLine: (widget) => {\n                const editor = widget.content.editor;\n                editor.execCommand('jumpToLine');\n            }\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","var map = {\n\t\"./3024-day.css\": [\n\t\t5210,\n\t\t5210\n\t],\n\t\"./3024-night.css\": [\n\t\t37123,\n\t\t7123\n\t],\n\t\"./abcdef.css\": [\n\t\t55169,\n\t\t5169\n\t],\n\t\"./ambiance-mobile.css\": [\n\t\t17677,\n\t\t7677\n\t],\n\t\"./ambiance.css\": [\n\t\t22607,\n\t\t2607\n\t],\n\t\"./ayu-dark.css\": [\n\t\t29335,\n\t\t9335\n\t],\n\t\"./ayu-mirage.css\": [\n\t\t59304,\n\t\t9304\n\t],\n\t\"./base16-dark.css\": [\n\t\t95273,\n\t\t5273\n\t],\n\t\"./base16-light.css\": [\n\t\t19554,\n\t\t9554\n\t],\n\t\"./bespin.css\": [\n\t\t49078,\n\t\t9078\n\t],\n\t\"./blackboard.css\": [\n\t\t75086,\n\t\t5086\n\t],\n\t\"./cobalt.css\": [\n\t\t66866,\n\t\t6866\n\t],\n\t\"./colorforth.css\": [\n\t\t27497,\n\t\t7497\n\t],\n\t\"./darcula.css\": [\n\t\t23989,\n\t\t3989\n\t],\n\t\"./dracula.css\": [\n\t\t86764,\n\t\t6764\n\t],\n\t\"./duotone-dark.css\": [\n\t\t41626,\n\t\t1626\n\t],\n\t\"./duotone-light.css\": [\n\t\t41831,\n\t\t1831\n\t],\n\t\"./eclipse.css\": [\n\t\t14606,\n\t\t4606\n\t],\n\t\"./elegant.css\": [\n\t\t33993,\n\t\t3993\n\t],\n\t\"./erlang-dark.css\": [\n\t\t76649,\n\t\t6649\n\t],\n\t\"./gruvbox-dark.css\": [\n\t\t25124,\n\t\t5124\n\t],\n\t\"./hopscotch.css\": [\n\t\t48797,\n\t\t8797\n\t],\n\t\"./icecoder.css\": [\n\t\t66074,\n\t\t6074\n\t],\n\t\"./idea.css\": [\n\t\t56787,\n\t\t6787\n\t],\n\t\"./isotope.css\": [\n\t\t96502,\n\t\t6502\n\t],\n\t\"./lesser-dark.css\": [\n\t\t30406,\n\t\t406\n\t],\n\t\"./liquibyte.css\": [\n\t\t30111,\n\t\t111\n\t],\n\t\"./lucario.css\": [\n\t\t18587,\n\t\t8587\n\t],\n\t\"./material-darker.css\": [\n\t\t74855,\n\t\t4855\n\t],\n\t\"./material-ocean.css\": [\n\t\t50257,\n\t\t257\n\t],\n\t\"./material-palenight.css\": [\n\t\t56756,\n\t\t6756\n\t],\n\t\"./material.css\": [\n\t\t10382,\n\t\t382\n\t],\n\t\"./mbo.css\": [\n\t\t50451,\n\t\t451\n\t],\n\t\"./mdn-like.css\": [\n\t\t86472,\n\t\t6472\n\t],\n\t\"./midnight.css\": [\n\t\t53217,\n\t\t3217\n\t],\n\t\"./monokai.css\": [\n\t\t98078,\n\t\t8078\n\t],\n\t\"./moxer.css\": [\n\t\t55185,\n\t\t5185\n\t],\n\t\"./neat.css\": [\n\t\t44911,\n\t\t4911\n\t],\n\t\"./neo.css\": [\n\t\t76092,\n\t\t6092\n\t],\n\t\"./night.css\": [\n\t\t5792,\n\t\t5792\n\t],\n\t\"./nord.css\": [\n\t\t86322,\n\t\t6322\n\t],\n\t\"./oceanic-next.css\": [\n\t\t93515,\n\t\t3515\n\t],\n\t\"./panda-syntax.css\": [\n\t\t31609,\n\t\t1609\n\t],\n\t\"./paraiso-dark.css\": [\n\t\t1361,\n\t\t1361\n\t],\n\t\"./paraiso-light.css\": [\n\t\t98142,\n\t\t8142\n\t],\n\t\"./pastel-on-dark.css\": [\n\t\t90141,\n\t\t141\n\t],\n\t\"./railscasts.css\": [\n\t\t59854,\n\t\t9854\n\t],\n\t\"./rubyblue.css\": [\n\t\t96724,\n\t\t6724\n\t],\n\t\"./seti.css\": [\n\t\t12763,\n\t\t2763\n\t],\n\t\"./shadowfox.css\": [\n\t\t53569,\n\t\t3569\n\t],\n\t\"./solarized.css\": [\n\t\t29496,\n\t\t9496\n\t],\n\t\"./ssms.css\": [\n\t\t61307,\n\t\t1307\n\t],\n\t\"./the-matrix.css\": [\n\t\t18035,\n\t\t8035\n\t],\n\t\"./tomorrow-night-bright.css\": [\n\t\t58585,\n\t\t8585\n\t],\n\t\"./tomorrow-night-eighties.css\": [\n\t\t99656,\n\t\t9656\n\t],\n\t\"./ttcn.css\": [\n\t\t42336,\n\t\t2336\n\t],\n\t\"./twilight.css\": [\n\t\t36946,\n\t\t6946\n\t],\n\t\"./vibrant-ink.css\": [\n\t\t96089,\n\t\t6089\n\t],\n\t\"./xq-dark.css\": [\n\t\t8464,\n\t\t8464\n\t],\n\t\"./xq-light.css\": [\n\t\t41885,\n\t\t1885\n\t],\n\t\"./yeti.css\": [\n\t\t22980,\n\t\t2980\n\t],\n\t\"./yonce.css\": [\n\t\t6570,\n\t\t6570\n\t],\n\t\"./zenburn.css\": [\n\t\t39439,\n\t\t9439\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 98908;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}