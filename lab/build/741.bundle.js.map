{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/attachmentmodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/factories.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/latex.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/mimemodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/outputmodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/renderers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/widgets.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/node_modules/marked/lib/marked.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash.escape/index.js"],"names":["Private","AttachmentModel","options","this","trusted","_changed","Signal","_raw","data","getData","value","_data","ObservableJSON","values","_rawData","key","extract","dispose","_updateObservable","emit","attachment","observable","oldKeys","keys","newKeys","Object","indexOf","delete","oldValue","get","newValue","set","bundle","map","create","mimeType","convertBundle","item","undefined","JSONExt","getBundleOptions","htmlRendererFactory","safe","mimeTypes","defaultRank","createRenderer","imageRendererFactory","latexRendererFactory","markdownRendererFactory","svgRendererFactory","textRendererFactory","javaScriptRendererFactory","standardRendererFactories","MATHSPLIT","removeMath","text","math","deTilde","start","end","last","braces","test","replace","wholematch","character","blocks","split","i","m","length","block","charAt","push","processMath","match","slice","substr","join","replaceMath","n","group","substring","j","preProcess","navigator","appName","MimeModel","_metadata","metadata","_callback","callback","noOp","OutputModel","_rawMetadata","type","output_type","executionCount","execution_count","output","getMetadata","name","traceback","ename","evalue","JSON","parse","stringify","RenderMimeRegistry","_id","_ranks","_types","_factories","translator","nullTranslator","resolver","linkHandler","latexTypesetter","sanitizer","defaultSanitizer","initialFactories","factory","addFactory","sortedTypes","mt","Error","clone","assign","rank","id","UrlResolver","path","_path","session","_session","_contents","contents","_a","url","isLocal","cwd","encodeURI","PathExt","urlPath","getDownloadUrl","decodeURIComponent","decodeURI","URLExt","driveName","sort","a","b","p1","p2","sessionConnection","s","sessionChanged","renderHTML","host","source","shouldTypeset","trans","load","promise","originalSource","textContent","Promise","resolve","sanitize","innerHTML","getElementsByTagName","evalInnerHTMLScriptTags","container","document","createElement","warning","__","runButton","onclick","event","firstChild","removeChild","appendChild","insertBefore","handleDefaults","handleUrls","then","typeset","renderImage","width","height","needsBackground","unconfined","img","src","classList","add","renderLatex","async","renderMarkdown","others","e","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","__rest","parts","html","renderMarked","headerAnchors","renderSVG","search","Image","encodeURIComponent","renderText","content","ansiSpan","allowedTags","pre","controlCodes","webLinkRegex","RegExp","lastChars","endsWithGtLt","toAppend","len","autolink","handleAttr","node","getAttribute","resolveUrl","protocol","Date","getTime","setAttribute","err","handleAnchor","anchor","href","hash","target","handleLink","catch","scripts","toArray","script","parentNode","attrs","attributes","replaceChild","markedInitialized","gfm","langPrefix","CodeMirrorEditor","highlight","code","lang","cb","Mode","spec","el","console","error","mime","reject","anchors","HTMLAnchorElement","rel","imgs","alt","promises","nodes","querySelectorAll","links","all","headerNames","headerType","headers","header","ANSI_COLORS","pushColoredChunk","chunk","fg","bg","bold","underline","inverse","out","classes","styles","getExtendedColors","numbers","r","g","shift","some","c","RangeError","idx","Math","floor","str","ansiRe","exec","items","parseInt","index","lastIndex","IRenderMimeRegistry","Token","ILatexTypesetter","RenderedCommon","Widget","super","dataset","model","toggleClass","render","fragment","setFragment","RenderedHTMLCommon","addClass","querySelector","warn","scrollIntoView","RenderedHTML","String","isAttached","msg","RenderedLatex","RenderedImage","RenderedMarkdown","RenderedSVG","RenderedText","RenderedJavaScript","module","exports","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_arrayLikeToArray","arr","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","toString","constructor","from","_unsupportedIterableToArray","done","TypeError","next","bind","defaults","fn","createCommonjsModule","getDefaults","baseUrl","breaks","headerIds","headerPrefix","mangle","pedantic","renderer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape","_","toLowerCase","fromCharCode","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","domain","base","rtrim","relativeBase","invert","l","suffLen","currChar","helpers","encode","regex","opt","obj","val","getRegex","prot","arguments","tableRow","count","cells","offset","escaped","curr","splice","trim","level","pattern","result","defaults$1","rtrim$1","splitCells$1","_escape","findClosingBracket$1","outputLink","cap","link","raw","title","Tokenizer_1","Tokenizer","_proto","space","rules","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentCodeCompensation","heading","trimmed","depth","nptable","align","hr","blockquote","list","bcurr","bnext","addBack","loose","istask","ischecked","endMatch","bull","isordered","ordered","itemMatch","listItemStart","task","checked","def","tag","table","lheading","paragraph","escape","inline","inLink","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","min","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","tokens","prevCapZero","_backpedal","inlineText","noopTest$1","edit$1","merge$1","_paragraph","_label","_title","bullet","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","defaults$2","block$1","inline$1","repeatString$1","charCodeAt","random","Lexer_1","Lexer","lex","lexInline","inlineTokens","Constructor","protoProps","staticProps","blockTokens","top","token","lastToken","errMsg","k","l2","row","keepPrevChar","includes","lastIndexOf","_lastToken","_lastToken2","defaults$3","cleanUrl$1","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","listitem","checkbox","tablerow","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","defaults$4","unescape$1","Parser_1","Parser","textRenderer","parseInline","l3","cell","itemBody","unshift","merge$2","checkSanitizeDeprecation$1","escape$2","defaults$5","marked","pending","setTimeout","_tokens","message","setOptions","use","extension","opts","_loop","prop","prevRenderer","_len","args","_key","ret","apply","_loop2","prevTokenizer","_len2","_key2","_step","_iterator","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","parser","lexer","object","reUnescapedHtml","reHasUnescapedHtml","freeGlobal","freeSelf","self","root","Function","escapeHtmlChar","objectToString","symbolProto","symbolToString","string","isObjectLike","isSymbol","baseToString"],"mappings":"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","file":"741.bundle.js","sourcesContent":["/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { ObservableJSON } from '@jupyterlab/observables';\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\n/**\n * The default implementation of a notebook attachment model.\n */\nexport class AttachmentModel {\n    /**\n     * Construct a new attachment model.\n     */\n    constructor(options) {\n        // All attachments are untrusted\n        this.trusted = false;\n        this._changed = new Signal(this);\n        this._raw = {};\n        const data = Private.getData(options.value);\n        this._data = new ObservableJSON({ values: data });\n        this._rawData = data;\n        // Make a copy of the data.\n        const value = options.value;\n        for (const key in value) {\n            // Ignore data and metadata that were stripped.\n            switch (key) {\n                case 'data':\n                    break;\n                default:\n                    this._raw[key] = Private.extract(value, key);\n            }\n        }\n    }\n    /**\n     * A signal emitted when the attachment model changes.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Dispose of the resources used by the attachment model.\n     */\n    dispose() {\n        this._data.dispose();\n        Signal.clearData(this);\n    }\n    /**\n     * The data associated with the model.\n     */\n    get data() {\n        return this._rawData;\n    }\n    /**\n     * The metadata associated with the model.\n     */\n    get metadata() {\n        return {};\n    }\n    /**\n     * Set the data associated with the model.\n     *\n     * #### Notes\n     * Depending on the implementation of the mime model,\n     * this call may or may not have deferred effects,\n     */\n    setData(options) {\n        if (options.data) {\n            this._updateObservable(this._data, options.data);\n            this._rawData = options.data;\n        }\n        this._changed.emit(void 0);\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const attachment = {};\n        for (const key in this._raw) {\n            attachment[key] = Private.extract(this._raw, key);\n        }\n        return attachment;\n    }\n    /**\n     * Update an observable JSON object using a readonly JSON object.\n     */\n    _updateObservable(observable, data) {\n        const oldKeys = observable.keys();\n        const newKeys = Object.keys(data);\n        // Handle removed keys.\n        for (const key of oldKeys) {\n            if (newKeys.indexOf(key) === -1) {\n                observable.delete(key);\n            }\n        }\n        // Handle changed data.\n        for (const key of newKeys) {\n            const oldValue = observable.get(key);\n            const newValue = data[key];\n            if (oldValue !== newValue) {\n                observable.set(key, newValue);\n            }\n        }\n    }\n}\n/**\n * The namespace for AttachmentModel statics.\n */\n(function (AttachmentModel) {\n    /**\n     * Get the data for an attachment.\n     *\n     * @params bundle - A kernel attachment MIME bundle.\n     *\n     * @returns - The data for the payload.\n     */\n    function getData(bundle) {\n        return Private.getData(bundle);\n    }\n    AttachmentModel.getData = getData;\n})(AttachmentModel || (AttachmentModel = {}));\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Get the data from a notebook attachment.\n     */\n    function getData(bundle) {\n        return convertBundle(bundle);\n    }\n    Private.getData = getData;\n    /**\n     * Get the bundle options given attachment model options.\n     */\n    function getBundleOptions(options) {\n        const data = getData(options.value);\n        return { data };\n    }\n    Private.getBundleOptions = getBundleOptions;\n    /**\n     * Extract a value from a JSONObject.\n     */\n    function extract(value, key) {\n        const item = value[key];\n        if (item === undefined || JSONExt.isPrimitive(item)) {\n            return item;\n        }\n        return JSONExt.deepCopy(item);\n    }\n    Private.extract = extract;\n    /**\n     * Convert a mime bundle to mime data.\n     */\n    function convertBundle(bundle) {\n        const map = Object.create(null);\n        for (const mimeType in bundle) {\n            map[mimeType] = extract(bundle, mimeType);\n        }\n        return map;\n    }\n})(Private || (Private = {}));\n//# sourceMappingURL=attachmentmodel.js.map","import * as widgets from './widgets';\n/**\n * A mime renderer factory for raw html.\n */\nexport const htmlRendererFactory = {\n    safe: true,\n    mimeTypes: ['text/html'],\n    defaultRank: 50,\n    createRenderer: options => new widgets.RenderedHTML(options)\n};\n/**\n * A mime renderer factory for images.\n */\nexport const imageRendererFactory = {\n    safe: true,\n    mimeTypes: ['image/bmp', 'image/png', 'image/jpeg', 'image/gif'],\n    defaultRank: 90,\n    createRenderer: options => new widgets.RenderedImage(options)\n};\n/**\n * A mime renderer factory for LaTeX.\n */\nexport const latexRendererFactory = {\n    safe: true,\n    mimeTypes: ['text/latex'],\n    defaultRank: 70,\n    createRenderer: options => new widgets.RenderedLatex(options)\n};\n/**\n * A mime renderer factory for Markdown.\n */\nexport const markdownRendererFactory = {\n    safe: true,\n    mimeTypes: ['text/markdown'],\n    defaultRank: 60,\n    createRenderer: options => new widgets.RenderedMarkdown(options)\n};\n/**\n * A mime renderer factory for svg.\n */\nexport const svgRendererFactory = {\n    safe: false,\n    mimeTypes: ['image/svg+xml'],\n    defaultRank: 80,\n    createRenderer: options => new widgets.RenderedSVG(options)\n};\n/**\n * A mime renderer factory for plain and jupyter console text data.\n */\nexport const textRendererFactory = {\n    safe: true,\n    mimeTypes: [\n        'text/plain',\n        'application/vnd.jupyter.stdout',\n        'application/vnd.jupyter.stderr'\n    ],\n    defaultRank: 120,\n    createRenderer: options => new widgets.RenderedText(options)\n};\n/**\n * A placeholder factory for rendered JavaScript.\n */\nexport const javaScriptRendererFactory = {\n    safe: false,\n    mimeTypes: ['text/javascript', 'application/javascript'],\n    defaultRank: 110,\n    createRenderer: options => new widgets.RenderedJavaScript(options)\n};\n/**\n * The standard factories provided by the rendermime package.\n */\nexport const standardRendererFactories = [\n    htmlRendererFactory,\n    markdownRendererFactory,\n    latexRendererFactory,\n    svgRendererFactory,\n    imageRendererFactory,\n    javaScriptRendererFactory,\n    textRendererFactory\n];\n//# sourceMappingURL=factories.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n// Some magic for deferring mathematical expressions to MathJax\n// by hiding them from the Markdown parser.\n// Some of the code here is adapted with permission from Davide Cervone\n// under the terms of the Apache2 license governing the MathJax project.\n// Other minor modifications are also due to StackExchange and are used with\n// permission.\nconst inline = '$'; // the inline math delimiter\n// MATHSPLIT contains the pattern for math delimiters and special symbols\n// needed for searching for math in the text input.\nconst MATHSPLIT = /(\\$\\$?|\\\\(?:begin|end)\\{[a-z]*\\*?\\}|\\\\[{}$]|[{}]|(?:\\n\\s*)+|@@\\d+@@|\\\\\\\\(?:\\(|\\)|\\[|\\]))/i;\n/**\n *  Break up the text into its component parts and search\n *    through them for math delimiters, braces, linebreaks, etc.\n *  Math delimiters must match and braces must balance.\n *  Don't allow math to pass through a double linebreak\n *    (which will be a paragraph).\n */\nexport function removeMath(text) {\n    const math = []; // stores math strings for later\n    let start = null;\n    let end = null;\n    let last = null;\n    let braces = 0;\n    let deTilde;\n    // Except for extreme edge cases, this should catch precisely those pieces of the markdown\n    // source that will later be turned into code spans. While MathJax will not TeXify code spans,\n    // we still have to consider them at this point; the following issue has happened several times:\n    //\n    //     `$foo` and `$bar` are variables.  -->  <code>$foo ` and `$bar</code> are variables.\n    const hasCodeSpans = /`/.test(text);\n    if (hasCodeSpans) {\n        text = text\n            .replace(/~/g, '~T')\n            .replace(/(^|[^\\\\])(`+)([^\\n]*?[^`\\n])\\2(?!`)/gm, wholematch => wholematch.replace(/\\$/g, '~D'));\n        deTilde = (text) => {\n            return text.replace(/~([TD])/g, (wholematch, character) => character === 'T' ? '~' : inline);\n        };\n    }\n    else {\n        deTilde = (text) => {\n            return text;\n        };\n    }\n    let blocks = text.replace(/\\r\\n?/g, '\\n').split(MATHSPLIT);\n    for (let i = 1, m = blocks.length; i < m; i += 2) {\n        const block = blocks[i];\n        if (block.charAt(0) === '@') {\n            //\n            //  Things that look like our math markers will get\n            //  stored and then retrieved along with the math.\n            //\n            blocks[i] = '@@' + math.length + '@@';\n            math.push(block);\n        }\n        else if (start !== null) {\n            //\n            //  If we are in math, look for the end delimiter,\n            //    but don't go past double line breaks, and\n            //    and balance braces within the math.\n            //\n            if (block === end) {\n                if (braces) {\n                    last = i;\n                }\n                else {\n                    blocks = processMath(start, i, deTilde, math, blocks);\n                    start = null;\n                    end = null;\n                    last = null;\n                }\n            }\n            else if (block.match(/\\n.*\\n/)) {\n                if (last !== null) {\n                    i = last;\n                    blocks = processMath(start, i, deTilde, math, blocks);\n                }\n                start = null;\n                end = null;\n                last = null;\n                braces = 0;\n            }\n            else if (block === '{') {\n                braces++;\n            }\n            else if (block === '}' && braces) {\n                braces--;\n            }\n        }\n        else {\n            //\n            //  Look for math start delimiters and when\n            //    found, set up the end delimiter.\n            //\n            if (block === inline || block === '$$') {\n                start = i;\n                end = block;\n                braces = 0;\n            }\n            else if (block === '\\\\\\\\(' || block === '\\\\\\\\[') {\n                start = i;\n                end = block.slice(-1) === '(' ? '\\\\\\\\)' : '\\\\\\\\]';\n                braces = 0;\n            }\n            else if (block.substr(1, 5) === 'begin') {\n                start = i;\n                end = '\\\\end' + block.substr(6);\n                braces = 0;\n            }\n        }\n    }\n    if (start !== null && last !== null) {\n        blocks = processMath(start, last, deTilde, math, blocks);\n        start = null;\n        end = null;\n        last = null;\n    }\n    return { text: deTilde(blocks.join('')), math };\n}\n/**\n * Put back the math strings that were saved,\n * and clear the math array (no need to keep it around).\n */\nexport function replaceMath(text, math) {\n    /**\n     * Replace a math placeholder with its corresponding group.\n     * The math delimiters \"\\\\(\", \"\\\\[\", \"\\\\)\" and \"\\\\]\" are replaced\n     * removing one backslash in order to be interpreted correctly by MathJax.\n     */\n    const process = (match, n) => {\n        let group = math[n];\n        if (group.substr(0, 3) === '\\\\\\\\(' &&\n            group.substr(group.length - 3) === '\\\\\\\\)') {\n            group = '\\\\(' + group.substring(3, group.length - 3) + '\\\\)';\n        }\n        else if (group.substr(0, 3) === '\\\\\\\\[' &&\n            group.substr(group.length - 3) === '\\\\\\\\]') {\n            group = '\\\\[' + group.substring(3, group.length - 3) + '\\\\]';\n        }\n        return group;\n    };\n    // Replace all the math group placeholders in the text\n    // with the saved strings.\n    return text.replace(/@@(\\d+)@@/g, process);\n}\n/**\n * Process math blocks.\n *\n * The math is in blocks i through j, so\n *   collect it into one block and clear the others.\n *  Replace &, <, and > by named entities.\n *  For IE, put <br> at the ends of comments since IE removes \\n.\n *  Clear the current math positions and store the index of the\n *   math, then push the math string onto the storage array.\n *  The preProcess function is called on all blocks if it has been passed in\n */\nfunction processMath(i, j, preProcess, math, blocks) {\n    let block = blocks\n        .slice(i, j + 1)\n        .join('')\n        .replace(/&/g, '&amp;') // use HTML entity for &\n        .replace(/</g, '&lt;') // use HTML entity for <\n        .replace(/>/g, '&gt;'); // use HTML entity for >\n    if (navigator && navigator.appName === 'Microsoft Internet Explorer') {\n        block = block.replace(/(%[^\\n]*)\\n/g, '$1<br/>\\n');\n    }\n    while (j > i) {\n        blocks[j] = '';\n        j--;\n    }\n    blocks[i] = '@@' + math.length + '@@'; // replace the current block text with a unique tag to find later\n    if (preProcess) {\n        block = preProcess(block);\n    }\n    math.push(block);\n    return blocks;\n}\n//# sourceMappingURL=latex.js.map","/**\n * The default mime model implementation.\n */\nexport class MimeModel {\n    /**\n     * Construct a new mime model.\n     */\n    constructor(options = {}) {\n        this.trusted = !!options.trusted;\n        this._data = options.data || {};\n        this._metadata = options.metadata || {};\n        this._callback = options.callback || Private.noOp;\n    }\n    /**\n     * The data associated with the model.\n     */\n    get data() {\n        return this._data;\n    }\n    /**\n     * The metadata associated with the model.\n     */\n    get metadata() {\n        return this._metadata;\n    }\n    /**\n     * Set the data associated with the model.\n     *\n     * #### Notes\n     * Depending on the implementation of the mime model,\n     * this call may or may not have deferred effects,\n     */\n    setData(options) {\n        this._data = options.data || this._data;\n        this._metadata = options.metadata || this._metadata;\n        this._callback(options);\n    }\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * A no-op callback function.\n     */\n    function noOp() {\n        /* no-op */\n    }\n    Private.noOp = noOp;\n})(Private || (Private = {}));\n//# sourceMappingURL=mimemodel.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport * as nbformat from '@jupyterlab/nbformat';\nimport { ObservableJSON } from '@jupyterlab/observables';\n/**\n * The default implementation of a notebook output model.\n */\nexport class OutputModel {\n    /**\n     * Construct a new output model.\n     */\n    constructor(options) {\n        this._changed = new Signal(this);\n        this._raw = {};\n        const { data, metadata, trusted } = Private.getBundleOptions(options);\n        this._data = new ObservableJSON({ values: data });\n        this._rawData = data;\n        this._metadata = new ObservableJSON({ values: metadata });\n        this._rawMetadata = metadata;\n        this.trusted = trusted;\n        // Make a copy of the data.\n        const value = options.value;\n        for (const key in value) {\n            // Ignore data and metadata that were stripped.\n            switch (key) {\n                case 'data':\n                case 'metadata':\n                    break;\n                default:\n                    this._raw[key] = Private.extract(value, key);\n            }\n        }\n        this.type = value.output_type;\n        if (nbformat.isExecuteResult(value)) {\n            this.executionCount = value.execution_count;\n        }\n        else {\n            this.executionCount = null;\n        }\n    }\n    /**\n     * A signal emitted when the output model changes.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Dispose of the resources used by the output model.\n     */\n    dispose() {\n        this._data.dispose();\n        this._metadata.dispose();\n        Signal.clearData(this);\n    }\n    /**\n     * The data associated with the model.\n     */\n    get data() {\n        return this._rawData;\n    }\n    /**\n     * The metadata associated with the model.\n     */\n    get metadata() {\n        return this._rawMetadata;\n    }\n    /**\n     * Set the data associated with the model.\n     *\n     * #### Notes\n     * Depending on the implementation of the mime model,\n     * this call may or may not have deferred effects,\n     */\n    setData(options) {\n        if (options.data) {\n            this._updateObservable(this._data, options.data);\n            this._rawData = options.data;\n        }\n        if (options.metadata) {\n            this._updateObservable(this._metadata, options.metadata);\n            this._rawMetadata = options.metadata;\n        }\n        this._changed.emit(void 0);\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const output = {};\n        for (const key in this._raw) {\n            output[key] = Private.extract(this._raw, key);\n        }\n        switch (this.type) {\n            case 'display_data':\n            case 'execute_result':\n            case 'update_display_data':\n                output['data'] = this.data;\n                output['metadata'] = this.metadata;\n                break;\n            default:\n                break;\n        }\n        // Remove transient data.\n        delete output['transient'];\n        return output;\n    }\n    /**\n     * Update an observable JSON object using a readonly JSON object.\n     */\n    _updateObservable(observable, data) {\n        const oldKeys = observable.keys();\n        const newKeys = Object.keys(data);\n        // Handle removed keys.\n        for (const key of oldKeys) {\n            if (newKeys.indexOf(key) === -1) {\n                observable.delete(key);\n            }\n        }\n        // Handle changed data.\n        for (const key of newKeys) {\n            const oldValue = observable.get(key);\n            const newValue = data[key];\n            if (oldValue !== newValue) {\n                observable.set(key, newValue);\n            }\n        }\n    }\n}\n/**\n * The namespace for OutputModel statics.\n */\n(function (OutputModel) {\n    /**\n     * Get the data for an output.\n     *\n     * @params output - A kernel output message payload.\n     *\n     * @returns - The data for the payload.\n     */\n    function getData(output) {\n        return Private.getData(output);\n    }\n    OutputModel.getData = getData;\n    /**\n     * Get the metadata from an output message.\n     *\n     * @params output - A kernel output message payload.\n     *\n     * @returns - The metadata for the payload.\n     */\n    function getMetadata(output) {\n        return Private.getMetadata(output);\n    }\n    OutputModel.getMetadata = getMetadata;\n})(OutputModel || (OutputModel = {}));\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Get the data from a notebook output.\n     */\n    function getData(output) {\n        let bundle = {};\n        if (nbformat.isExecuteResult(output) ||\n            nbformat.isDisplayData(output) ||\n            nbformat.isDisplayUpdate(output)) {\n            bundle = output.data;\n        }\n        else if (nbformat.isStream(output)) {\n            if (output.name === 'stderr') {\n                bundle['application/vnd.jupyter.stderr'] = output.text;\n            }\n            else {\n                bundle['application/vnd.jupyter.stdout'] = output.text;\n            }\n        }\n        else if (nbformat.isError(output)) {\n            bundle['application/vnd.jupyter.error'] = output;\n            const traceback = output.traceback.join('\\n');\n            bundle['application/vnd.jupyter.stderr'] =\n                traceback || `${output.ename}: ${output.evalue}`;\n        }\n        return convertBundle(bundle);\n    }\n    Private.getData = getData;\n    /**\n     * Get the metadata from an output message.\n     */\n    function getMetadata(output) {\n        const value = Object.create(null);\n        if (nbformat.isExecuteResult(output) || nbformat.isDisplayData(output)) {\n            for (const key in output.metadata) {\n                value[key] = extract(output.metadata, key);\n            }\n        }\n        return value;\n    }\n    Private.getMetadata = getMetadata;\n    /**\n     * Get the bundle options given output model options.\n     */\n    function getBundleOptions(options) {\n        const data = getData(options.value);\n        const metadata = getMetadata(options.value);\n        const trusted = !!options.trusted;\n        return { data, metadata, trusted };\n    }\n    Private.getBundleOptions = getBundleOptions;\n    /**\n     * Extract a value from a JSONObject.\n     */\n    function extract(value, key) {\n        const item = value[key];\n        if (item === undefined || JSONExt.isPrimitive(item)) {\n            return item;\n        }\n        return JSON.parse(JSON.stringify(item));\n    }\n    Private.extract = extract;\n    /**\n     * Convert a mime bundle to mime data.\n     */\n    function convertBundle(bundle) {\n        const map = Object.create(null);\n        for (const mimeType in bundle) {\n            map[mimeType] = extract(bundle, mimeType);\n        }\n        return map;\n    }\n})(Private || (Private = {}));\n//# sourceMappingURL=outputmodel.js.map","import { PathExt, URLExt } from '@jupyterlab/coreutils';\nimport { defaultSanitizer } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { MimeModel } from './mimemodel';\n/**\n * An object which manages mime renderer factories.\n *\n * This object is used to render mime models using registered mime\n * renderers, selecting the preferred mime renderer to render the\n * model into a widget.\n *\n * #### Notes\n * This class is not intended to be subclassed.\n */\nexport class RenderMimeRegistry {\n    /**\n     * Construct a new rendermime.\n     *\n     * @param options - The options for initializing the instance.\n     */\n    constructor(options = {}) {\n        this._id = 0;\n        this._ranks = {};\n        this._types = null;\n        this._factories = {};\n        // Parse the options.\n        this.translator = options.translator || nullTranslator;\n        this.resolver = options.resolver || null;\n        this.linkHandler = options.linkHandler || null;\n        this.latexTypesetter = options.latexTypesetter || null;\n        this.sanitizer = options.sanitizer || defaultSanitizer;\n        // Add the initial factories.\n        if (options.initialFactories) {\n            for (const factory of options.initialFactories) {\n                this.addFactory(factory);\n            }\n        }\n    }\n    /**\n     * The ordered list of mimeTypes.\n     */\n    get mimeTypes() {\n        return this._types || (this._types = Private.sortedTypes(this._ranks));\n    }\n    /**\n     * Find the preferred mime type for a mime bundle.\n     *\n     * @param bundle - The bundle of mime data.\n     *\n     * @param safe - How to consider safe/unsafe factories. If 'ensure',\n     *   it will only consider safe factories. If 'any', any factory will be\n     *   considered. If 'prefer', unsafe factories will be considered, but\n     *   only after the safe options have been exhausted.\n     *\n     * @returns The preferred mime type from the available factories,\n     *   or `undefined` if the mime type cannot be rendered.\n     */\n    preferredMimeType(bundle, safe = 'ensure') {\n        // Try to find a safe factory first, if preferred.\n        if (safe === 'ensure' || safe === 'prefer') {\n            for (const mt of this.mimeTypes) {\n                if (mt in bundle && this._factories[mt].safe) {\n                    return mt;\n                }\n            }\n        }\n        if (safe !== 'ensure') {\n            // Otherwise, search for the best factory among all factories.\n            for (const mt of this.mimeTypes) {\n                if (mt in bundle) {\n                    return mt;\n                }\n            }\n        }\n        // Otherwise, no matching mime type exists.\n        return undefined;\n    }\n    /**\n     * Create a renderer for a mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @returns A new renderer for the given mime type.\n     *\n     * @throws An error if no factory exists for the mime type.\n     */\n    createRenderer(mimeType) {\n        // Throw an error if no factory exists for the mime type.\n        if (!(mimeType in this._factories)) {\n            throw new Error(`No factory for mime type: '${mimeType}'`);\n        }\n        // Invoke the best factory for the given mime type.\n        return this._factories[mimeType].createRenderer({\n            mimeType,\n            resolver: this.resolver,\n            sanitizer: this.sanitizer,\n            linkHandler: this.linkHandler,\n            latexTypesetter: this.latexTypesetter,\n            translator: this.translator\n        });\n    }\n    /**\n     * Create a new mime model.  This is a convenience method.\n     *\n     * @options - The options used to create the model.\n     *\n     * @returns A new mime model.\n     */\n    createModel(options = {}) {\n        return new MimeModel(options);\n    }\n    /**\n     * Create a clone of this rendermime instance.\n     *\n     * @param options - The options for configuring the clone.\n     *\n     * @returns A new independent clone of the rendermime.\n     */\n    clone(options = {}) {\n        // Create the clone.\n        const clone = new RenderMimeRegistry({\n            resolver: options.resolver || this.resolver || undefined,\n            sanitizer: options.sanitizer || this.sanitizer || undefined,\n            linkHandler: options.linkHandler || this.linkHandler || undefined,\n            latexTypesetter: options.latexTypesetter || this.latexTypesetter || undefined,\n            translator: this.translator\n        });\n        // Clone the internal state.\n        clone._factories = Object.assign({}, this._factories);\n        clone._ranks = Object.assign({}, this._ranks);\n        clone._id = this._id;\n        // Return the cloned object.\n        return clone;\n    }\n    /**\n     * Get the renderer factory registered for a mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @returns The factory for the mime type, or `undefined`.\n     */\n    getFactory(mimeType) {\n        return this._factories[mimeType];\n    }\n    /**\n     * Add a renderer factory to the rendermime.\n     *\n     * @param factory - The renderer factory of interest.\n     *\n     * @param rank - The rank of the renderer. A lower rank indicates\n     *   a higher priority for rendering. If not given, the rank will\n     *   defer to the `defaultRank` of the factory.  If no `defaultRank`\n     *   is given, it will default to 100.\n     *\n     * #### Notes\n     * The renderer will replace an existing renderer for the given\n     * mimeType.\n     */\n    addFactory(factory, rank) {\n        if (rank === undefined) {\n            rank = factory.defaultRank;\n            if (rank === undefined) {\n                rank = 100;\n            }\n        }\n        for (const mt of factory.mimeTypes) {\n            this._factories[mt] = factory;\n            this._ranks[mt] = { rank, id: this._id++ };\n        }\n        this._types = null;\n    }\n    /**\n     * Remove a mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     */\n    removeMimeType(mimeType) {\n        delete this._factories[mimeType];\n        delete this._ranks[mimeType];\n        this._types = null;\n    }\n    /**\n     * Get the rank for a given mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @returns The rank of the mime type or undefined.\n     */\n    getRank(mimeType) {\n        const rank = this._ranks[mimeType];\n        return rank && rank.rank;\n    }\n    /**\n     * Set the rank of a given mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @param rank - The new rank to assign.\n     *\n     * #### Notes\n     * This is a no-op if the mime type is not registered.\n     */\n    setRank(mimeType, rank) {\n        if (!this._ranks[mimeType]) {\n            return;\n        }\n        const id = this._id++;\n        this._ranks[mimeType] = { rank, id };\n        this._types = null;\n    }\n}\n/**\n * The namespace for `RenderMimeRegistry` class statics.\n */\n(function (RenderMimeRegistry) {\n    /**\n     * A default resolver that uses a given reference path and a contents manager.\n     */\n    class UrlResolver {\n        /**\n         * Create a new url resolver.\n         */\n        constructor(options) {\n            if (options.path) {\n                this._path = options.path;\n            }\n            else if (options.session) {\n                this._session = options.session;\n            }\n            else {\n                throw new Error(\"Either 'path' or 'session' must be given as a constructor option\");\n            }\n            this._contents = options.contents;\n        }\n        /**\n         * The path of the object, from which local urls can be derived.\n         */\n        get path() {\n            var _a;\n            return (_a = this._path) !== null && _a !== void 0 ? _a : this._session.path;\n        }\n        set path(value) {\n            this._path = value;\n        }\n        /**\n         * Resolve a relative url to an absolute url path.\n         */\n        async resolveUrl(url) {\n            if (this.isLocal(url)) {\n                const cwd = encodeURI(PathExt.dirname(this.path));\n                url = PathExt.resolve(cwd, url);\n            }\n            return url;\n        }\n        /**\n         * Get the download url of a given absolute url path.\n         *\n         * #### Notes\n         * The returned URL may include a query parameter.\n         */\n        async getDownloadUrl(urlPath) {\n            if (this.isLocal(urlPath)) {\n                // decode url->path before passing to contents api\n                return this._contents.getDownloadUrl(decodeURIComponent(urlPath));\n            }\n            return urlPath;\n        }\n        /**\n         * Whether the URL should be handled by the resolver\n         * or not.\n         *\n         * #### Notes\n         * This is similar to the `isLocal` check in `URLExt`,\n         * but it also checks whether the path points to any\n         * of the `IDrive`s that may be registered with the contents\n         * manager.\n         */\n        isLocal(url) {\n            const path = decodeURI(url);\n            return URLExt.isLocal(url) || !!this._contents.driveName(path);\n        }\n    }\n    RenderMimeRegistry.UrlResolver = UrlResolver;\n})(RenderMimeRegistry || (RenderMimeRegistry = {}));\n/**\n * The namespace for the module implementation details.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Get the mime types in the map, ordered by rank.\n     */\n    function sortedTypes(map) {\n        return Object.keys(map).sort((a, b) => {\n            const p1 = map[a];\n            const p2 = map[b];\n            if (p1.rank !== p2.rank) {\n                return p1.rank - p2.rank;\n            }\n            return p1.id - p2.id;\n        });\n    }\n    Private.sortedTypes = sortedTypes;\n    function sessionConnection(s) {\n        return s.sessionChanged\n            ? s.session\n            : s;\n    }\n    Private.sessionConnection = sessionConnection;\n})(Private || (Private = {}));\n//# sourceMappingURL=registry.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport marked from 'marked';\nimport { Mode, CodeMirrorEditor } from '@jupyterlab/codemirror';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { toArray } from '@lumino/algorithm';\nimport escape from 'lodash.escape';\nimport { removeMath, replaceMath } from './latex';\n/**\n * Render HTML into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderHTML(options) {\n    // Unpack the options.\n    let { host, source, trusted, sanitizer, resolver, linkHandler, shouldTypeset, latexTypesetter, translator } = options;\n    translator = translator || nullTranslator;\n    const trans = translator === null || translator === void 0 ? void 0 : translator.load('jupyterlab');\n    let originalSource = source;\n    // Bail early if the source is empty.\n    if (!source) {\n        host.textContent = '';\n        return Promise.resolve(undefined);\n    }\n    // Sanitize the source if it is not trusted. This removes all\n    // `<script>` tags as well as other potentially harmful HTML.\n    if (!trusted) {\n        originalSource = `${source}`;\n        source = sanitizer.sanitize(source);\n    }\n    // Set the inner HTML of the host.\n    host.innerHTML = source;\n    if (host.getElementsByTagName('script').length > 0) {\n        // If output it trusted, eval any script tags contained in the HTML.\n        // This is not done automatically by the browser when script tags are\n        // created by setting `innerHTML`.\n        if (trusted) {\n            Private.evalInnerHTMLScriptTags(host);\n        }\n        else {\n            const container = document.createElement('div');\n            const warning = document.createElement('pre');\n            warning.textContent = trans.__('This HTML output contains inline scripts. Are you sure that you want to run arbitrary Javascript within your JupyterLab session?');\n            const runButton = document.createElement('button');\n            runButton.textContent = trans.__('Run');\n            runButton.onclick = event => {\n                host.innerHTML = originalSource;\n                Private.evalInnerHTMLScriptTags(host);\n                if (host.firstChild) {\n                    host.removeChild(host.firstChild);\n                }\n            };\n            container.appendChild(warning);\n            container.appendChild(runButton);\n            host.insertBefore(container, host.firstChild);\n        }\n    }\n    // Handle default behavior of nodes.\n    Private.handleDefaults(host, resolver);\n    // Patch the urls if a resolver is available.\n    let promise;\n    if (resolver) {\n        promise = Private.handleUrls(host, resolver, linkHandler);\n    }\n    else {\n        promise = Promise.resolve(undefined);\n    }\n    // Return the final rendered promise.\n    return promise.then(() => {\n        if (shouldTypeset && latexTypesetter) {\n            latexTypesetter.typeset(host);\n        }\n    });\n}\n/**\n * Render an image into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderImage(options) {\n    // Unpack the options.\n    const { host, mimeType, source, width, height, needsBackground, unconfined } = options;\n    // Clear the content in the host.\n    host.textContent = '';\n    // Create the image element.\n    const img = document.createElement('img');\n    // Set the source of the image.\n    img.src = `data:${mimeType};base64,${source}`;\n    // Set the size of the image if provided.\n    if (typeof height === 'number') {\n        img.height = height;\n    }\n    if (typeof width === 'number') {\n        img.width = width;\n    }\n    if (needsBackground === 'light') {\n        img.classList.add('jp-needs-light-background');\n    }\n    else if (needsBackground === 'dark') {\n        img.classList.add('jp-needs-dark-background');\n    }\n    if (unconfined === true) {\n        img.classList.add('jp-mod-unconfined');\n    }\n    // Add the image to the host.\n    host.appendChild(img);\n    // Return the rendered promise.\n    return Promise.resolve(undefined);\n}\n/**\n * Render LaTeX into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderLatex(options) {\n    // Unpack the options.\n    const { host, source, shouldTypeset, latexTypesetter } = options;\n    // Set the source on the node.\n    host.textContent = source;\n    // Typeset the node if needed.\n    if (shouldTypeset && latexTypesetter) {\n        latexTypesetter.typeset(host);\n    }\n    // Return the rendered promise.\n    return Promise.resolve(undefined);\n}\n/**\n * Render Markdown into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport async function renderMarkdown(options) {\n    // Unpack the options.\n    const { host, source } = options, others = __rest(options, [\"host\", \"source\"]);\n    // Clear the content if there is no source.\n    if (!source) {\n        host.textContent = '';\n        return;\n    }\n    // Separate math from normal markdown text.\n    const parts = removeMath(source);\n    // Convert the markdown to HTML.\n    let html = await Private.renderMarked(parts['text']);\n    // Replace math.\n    html = replaceMath(html, parts['math']);\n    // Render HTML.\n    await renderHTML(Object.assign({ host, source: html }, others));\n    // Apply ids to the header nodes.\n    Private.headerAnchors(host);\n}\n/**\n * Render SVG into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderSVG(options) {\n    // Unpack the options.\n    let { host, source, trusted, unconfined } = options;\n    // Clear the content if there is no source.\n    if (!source) {\n        host.textContent = '';\n        return Promise.resolve(undefined);\n    }\n    // Display a message if the source is not trusted.\n    if (!trusted) {\n        host.textContent =\n            'Cannot display an untrusted SVG. Maybe you need to run the cell?';\n        return Promise.resolve(undefined);\n    }\n    // Add missing SVG namespace (if actually missing)\n    const patt = '<svg[^>]+xmlns=[^>]+svg';\n    if (source.search(patt) < 0) {\n        source = source.replace('<svg', '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n    }\n    // Render in img so that user can save it easily\n    const img = new Image();\n    img.src = `data:image/svg+xml,${encodeURIComponent(source)}`;\n    host.appendChild(img);\n    if (unconfined === true) {\n        host.classList.add('jp-mod-unconfined');\n    }\n    return Promise.resolve();\n}\n/**\n * Replace URLs with links.\n *\n * @param content - The plain text content.\n *\n * @returns The content where all URLs have been replaced with corresponding links.\n */\nfunction autolink(content) {\n    // Taken from Visual Studio Code:\n    // https://github.com/microsoft/vscode/blob/9f709d170b06e991502153f281ec3c012add2e42/src/vs/workbench/contrib/debug/browser/linkDetector.ts#L17-L18\n    const controlCodes = '\\\\u0000-\\\\u0020\\\\u007f-\\\\u009f';\n    const webLinkRegex = new RegExp('(?:[a-zA-Z][a-zA-Z0-9+.-]{2,}:\\\\/\\\\/|data:|www\\\\.)[^\\\\s' +\n        controlCodes +\n        '\"]{2,}[^\\\\s' +\n        controlCodes +\n        '\"\\'(){}\\\\[\\\\],:;.!?]', 'ug');\n    return content.replace(webLinkRegex, url => {\n        // Special case when the URL ends with \">\" or \"<\"\n        const lastChars = url.slice(-3);\n        const endsWithGtLt = ['&gt', '&lt'].indexOf(lastChars) !== -1;\n        const toAppend = endsWithGtLt ? lastChars : '';\n        const len = endsWithGtLt ? url.length - 3 : url.length;\n        return (`<a href=\"${url.slice(0, len)}\" rel=\"noopener\" target=\"_blank\">` +\n            `${url.slice(0, len)}</a>${toAppend}`);\n    });\n}\n/**\n * Render text into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderText(options) {\n    // Unpack the options.\n    const { host, sanitizer, source } = options;\n    // Create the HTML content.\n    const content = sanitizer.sanitize(Private.ansiSpan(source), {\n        allowedTags: ['span']\n    });\n    // Set the sanitized content for the host node.\n    const pre = document.createElement('pre');\n    pre.innerHTML = autolink(content);\n    host.appendChild(pre);\n    // Return the rendered promise.\n    return Promise.resolve(undefined);\n}\n/**\n * The namespace for module implementation details.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Eval the script tags contained in a host populated by `innerHTML`.\n     *\n     * When script tags are created via `innerHTML`, the browser does not\n     * evaluate them when they are added to the page. This function works\n     * around that by creating new equivalent script nodes manually, and\n     * replacing the originals.\n     */\n    function evalInnerHTMLScriptTags(host) {\n        // Create a snapshot of the current script nodes.\n        const scripts = toArray(host.getElementsByTagName('script'));\n        // Loop over each script node.\n        for (const script of scripts) {\n            // Skip any scripts which no longer have a parent.\n            if (!script.parentNode) {\n                continue;\n            }\n            // Create a new script node which will be clone.\n            const clone = document.createElement('script');\n            // Copy the attributes into the clone.\n            const attrs = script.attributes;\n            for (let i = 0, n = attrs.length; i < n; ++i) {\n                const { name, value } = attrs[i];\n                clone.setAttribute(name, value);\n            }\n            // Copy the text content into the clone.\n            clone.textContent = script.textContent;\n            // Replace the old script in the parent.\n            script.parentNode.replaceChild(clone, script);\n        }\n    }\n    Private.evalInnerHTMLScriptTags = evalInnerHTMLScriptTags;\n    /**\n     * Render markdown for the specified content.\n     *\n     * @param content - The string of markdown to render.\n     *\n     * @return A promise which resolves with the rendered content.\n     */\n    function renderMarked(content) {\n        initializeMarked();\n        return new Promise((resolve, reject) => {\n            marked(content, (err, content) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(content);\n                }\n            });\n        });\n    }\n    Private.renderMarked = renderMarked;\n    /**\n     * Handle the default behavior of nodes.\n     */\n    function handleDefaults(node, resolver) {\n        // Handle anchor elements.\n        const anchors = node.getElementsByTagName('a');\n        for (let i = 0; i < anchors.length; i++) {\n            const el = anchors[i];\n            // skip when processing a elements inside svg\n            // which are of type SVGAnimatedString\n            if (!(el instanceof HTMLAnchorElement)) {\n                continue;\n            }\n            const path = el.href;\n            const isLocal = resolver && resolver.isLocal\n                ? resolver.isLocal(path)\n                : URLExt.isLocal(path);\n            // set target attribute if not already present\n            if (!el.target) {\n                el.target = isLocal ? '_self' : '_blank';\n            }\n            // set rel as 'noopener' for non-local anchors\n            if (!isLocal) {\n                el.rel = 'noopener';\n            }\n        }\n        // Handle image elements.\n        const imgs = node.getElementsByTagName('img');\n        for (let i = 0; i < imgs.length; i++) {\n            if (!imgs[i].alt) {\n                imgs[i].alt = 'Image';\n            }\n        }\n    }\n    Private.handleDefaults = handleDefaults;\n    /**\n     * Resolve the relative urls in element `src` and `href` attributes.\n     *\n     * @param node - The head html element.\n     *\n     * @param resolver - A url resolver.\n     *\n     * @param linkHandler - An optional link handler for nodes.\n     *\n     * @returns a promise fulfilled when the relative urls have been resolved.\n     */\n    function handleUrls(node, resolver, linkHandler) {\n        // Set up an array to collect promises.\n        const promises = [];\n        // Handle HTML Elements with src attributes.\n        const nodes = node.querySelectorAll('*[src]');\n        for (let i = 0; i < nodes.length; i++) {\n            promises.push(handleAttr(nodes[i], 'src', resolver));\n        }\n        // Handle anchor elements.\n        const anchors = node.getElementsByTagName('a');\n        for (let i = 0; i < anchors.length; i++) {\n            promises.push(handleAnchor(anchors[i], resolver, linkHandler));\n        }\n        // Handle link elements.\n        const links = node.getElementsByTagName('link');\n        for (let i = 0; i < links.length; i++) {\n            promises.push(handleAttr(links[i], 'href', resolver));\n        }\n        // Wait on all promises.\n        return Promise.all(promises).then(() => undefined);\n    }\n    Private.handleUrls = handleUrls;\n    /**\n     * Apply ids to headers.\n     */\n    function headerAnchors(node) {\n        var _a;\n        const headerNames = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n        for (const headerType of headerNames) {\n            const headers = node.getElementsByTagName(headerType);\n            for (let i = 0; i < headers.length; i++) {\n                const header = headers[i];\n                header.id = ((_a = header.textContent) !== null && _a !== void 0 ? _a : '').replace(/ /g, '-');\n                const anchor = document.createElement('a');\n                anchor.target = '_self';\n                anchor.textContent = '¶';\n                anchor.href = '#' + header.id;\n                anchor.classList.add('jp-InternalAnchorLink');\n                header.appendChild(anchor);\n            }\n        }\n    }\n    Private.headerAnchors = headerAnchors;\n    /**\n     * Handle a node with a `src` or `href` attribute.\n     */\n    async function handleAttr(node, name, resolver) {\n        const source = node.getAttribute(name) || '';\n        const isLocal = resolver.isLocal\n            ? resolver.isLocal(source)\n            : URLExt.isLocal(source);\n        if (!source || !isLocal) {\n            return;\n        }\n        try {\n            const urlPath = await resolver.resolveUrl(source);\n            let url = await resolver.getDownloadUrl(urlPath);\n            if (URLExt.parse(url).protocol !== 'data:') {\n                // Bust caching for local src attrs.\n                // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n            }\n            node.setAttribute(name, url);\n        }\n        catch (err) {\n            // If there was an error getting the url,\n            // just make it an empty link and report the error.\n            node.setAttribute(name, '');\n            throw err;\n        }\n    }\n    /**\n     * Handle an anchor node.\n     */\n    function handleAnchor(anchor, resolver, linkHandler) {\n        // Get the link path without the location prepended.\n        // (e.g. \"./foo.md#Header 1\" vs \"http://localhost:8888/foo.md#Header 1\")\n        let href = anchor.getAttribute('href') || '';\n        const isLocal = resolver.isLocal\n            ? resolver.isLocal(href)\n            : URLExt.isLocal(href);\n        // Bail if it is not a file-like url.\n        if (!href || !isLocal) {\n            return Promise.resolve(undefined);\n        }\n        // Remove the hash until we can handle it.\n        const hash = anchor.hash;\n        if (hash) {\n            // Handle internal link in the file.\n            if (hash === href) {\n                anchor.target = '_self';\n                return Promise.resolve(undefined);\n            }\n            // For external links, remove the hash until we have hash handling.\n            href = href.replace(hash, '');\n        }\n        // Get the appropriate file path.\n        return resolver\n            .resolveUrl(href)\n            .then(urlPath => {\n            // decode encoded url from url to api path\n            const path = decodeURIComponent(urlPath);\n            // Handle the click override.\n            if (linkHandler) {\n                linkHandler.handleLink(anchor, path, hash);\n            }\n            // Get the appropriate file download path.\n            return resolver.getDownloadUrl(urlPath);\n        })\n            .then(url => {\n            // Set the visible anchor.\n            anchor.href = url + hash;\n        })\n            .catch(err => {\n            // If there was an error getting the url,\n            // just make it an empty link.\n            anchor.href = '';\n        });\n    }\n    let markedInitialized = false;\n    /**\n     * Support GitHub flavored Markdown, leave sanitizing to external library.\n     */\n    function initializeMarked() {\n        if (markedInitialized) {\n            return;\n        }\n        markedInitialized = true;\n        marked.setOptions({\n            gfm: true,\n            sanitize: false,\n            // breaks: true; We can't use GFM breaks as it causes problems with tables\n            langPrefix: `cm-s-${CodeMirrorEditor.defaultConfig.theme} language-`,\n            highlight: (code, lang, callback) => {\n                const cb = (err, code) => {\n                    if (callback) {\n                        callback(err, code);\n                    }\n                    return code;\n                };\n                if (!lang) {\n                    // no language, no highlight\n                    return cb(null, code);\n                }\n                Mode.ensure(lang)\n                    .then(spec => {\n                    const el = document.createElement('div');\n                    if (!spec) {\n                        console.error(`No CodeMirror mode: ${lang}`);\n                        return cb(null, code);\n                    }\n                    try {\n                        Mode.run(code, spec.mime, el);\n                        return cb(null, el.innerHTML);\n                    }\n                    catch (err) {\n                        console.error(`Failed to highlight ${lang} code`, err);\n                        return cb(err, code);\n                    }\n                })\n                    .catch(err => {\n                    console.error(`No CodeMirror mode: ${lang}`);\n                    console.error(`Require CodeMirror mode error: ${err}`);\n                    return cb(null, code);\n                });\n                return code;\n            }\n        });\n    }\n    const ANSI_COLORS = [\n        'ansi-black',\n        'ansi-red',\n        'ansi-green',\n        'ansi-yellow',\n        'ansi-blue',\n        'ansi-magenta',\n        'ansi-cyan',\n        'ansi-white',\n        'ansi-black-intense',\n        'ansi-red-intense',\n        'ansi-green-intense',\n        'ansi-yellow-intense',\n        'ansi-blue-intense',\n        'ansi-magenta-intense',\n        'ansi-cyan-intense',\n        'ansi-white-intense'\n    ];\n    /**\n     * Create HTML tags for a string with given foreground, background etc. and\n     * add them to the `out` array.\n     */\n    function pushColoredChunk(chunk, fg, bg, bold, underline, inverse, out) {\n        if (chunk) {\n            const classes = [];\n            const styles = [];\n            if (bold && typeof fg === 'number' && 0 <= fg && fg < 8) {\n                fg += 8; // Bold text uses \"intense\" colors\n            }\n            if (inverse) {\n                [fg, bg] = [bg, fg];\n            }\n            if (typeof fg === 'number') {\n                classes.push(ANSI_COLORS[fg] + '-fg');\n            }\n            else if (fg.length) {\n                styles.push(`color: rgb(${fg})`);\n            }\n            else if (inverse) {\n                classes.push('ansi-default-inverse-fg');\n            }\n            if (typeof bg === 'number') {\n                classes.push(ANSI_COLORS[bg] + '-bg');\n            }\n            else if (bg.length) {\n                styles.push(`background-color: rgb(${bg})`);\n            }\n            else if (inverse) {\n                classes.push('ansi-default-inverse-bg');\n            }\n            if (bold) {\n                classes.push('ansi-bold');\n            }\n            if (underline) {\n                classes.push('ansi-underline');\n            }\n            if (classes.length || styles.length) {\n                out.push('<span');\n                if (classes.length) {\n                    out.push(` class=\"${classes.join(' ')}\"`);\n                }\n                if (styles.length) {\n                    out.push(` style=\"${styles.join('; ')}\"`);\n                }\n                out.push('>');\n                out.push(chunk);\n                out.push('</span>');\n            }\n            else {\n                out.push(chunk);\n            }\n        }\n    }\n    /**\n     * Convert ANSI extended colors to R/G/B triple.\n     */\n    function getExtendedColors(numbers) {\n        let r;\n        let g;\n        let b;\n        const n = numbers.shift();\n        if (n === 2 && numbers.length >= 3) {\n            // 24-bit RGB\n            r = numbers.shift();\n            g = numbers.shift();\n            b = numbers.shift();\n            if ([r, g, b].some(c => c < 0 || 255 < c)) {\n                throw new RangeError('Invalid range for RGB colors');\n            }\n        }\n        else if (n === 5 && numbers.length >= 1) {\n            // 256 colors\n            const idx = numbers.shift();\n            if (idx < 0) {\n                throw new RangeError('Color index must be >= 0');\n            }\n            else if (idx < 16) {\n                // 16 default terminal colors\n                return idx;\n            }\n            else if (idx < 232) {\n                // 6x6x6 color cube, see https://stackoverflow.com/a/27165165/500098\n                r = Math.floor((idx - 16) / 36);\n                r = r > 0 ? 55 + r * 40 : 0;\n                g = Math.floor(((idx - 16) % 36) / 6);\n                g = g > 0 ? 55 + g * 40 : 0;\n                b = (idx - 16) % 6;\n                b = b > 0 ? 55 + b * 40 : 0;\n            }\n            else if (idx < 256) {\n                // grayscale, see https://stackoverflow.com/a/27165165/500098\n                r = g = b = (idx - 232) * 10 + 8;\n            }\n            else {\n                throw new RangeError('Color index must be < 256');\n            }\n        }\n        else {\n            throw new RangeError('Invalid extended color specification');\n        }\n        return [r, g, b];\n    }\n    /**\n     * Transform ANSI color escape codes into HTML <span> tags with CSS\n     * classes such as \"ansi-green-intense-fg\".\n     * The actual colors used are set in the CSS file.\n     * This also removes non-color escape sequences.\n     * This is supposed to have the same behavior as nbconvert.filters.ansi2html()\n     */\n    function ansiSpan(str) {\n        const ansiRe = /\\x1b\\[(.*?)([@-~])/g; // eslint-disable-line no-control-regex\n        let fg = [];\n        let bg = [];\n        let bold = false;\n        let underline = false;\n        let inverse = false;\n        let match;\n        const out = [];\n        const numbers = [];\n        let start = 0;\n        str = escape(str);\n        str += '\\x1b[m'; // Ensure markup for trailing text\n        // tslint:disable-next-line\n        while ((match = ansiRe.exec(str))) {\n            if (match[2] === 'm') {\n                const items = match[1].split(';');\n                for (let i = 0; i < items.length; i++) {\n                    const item = items[i];\n                    if (item === '') {\n                        numbers.push(0);\n                    }\n                    else if (item.search(/^\\d+$/) !== -1) {\n                        numbers.push(parseInt(item, 10));\n                    }\n                    else {\n                        // Ignored: Invalid color specification\n                        numbers.length = 0;\n                        break;\n                    }\n                }\n            }\n            else {\n                // Ignored: Not a color code\n            }\n            const chunk = str.substring(start, match.index);\n            pushColoredChunk(chunk, fg, bg, bold, underline, inverse, out);\n            start = ansiRe.lastIndex;\n            while (numbers.length) {\n                const n = numbers.shift();\n                switch (n) {\n                    case 0:\n                        fg = bg = [];\n                        bold = false;\n                        underline = false;\n                        inverse = false;\n                        break;\n                    case 1:\n                    case 5:\n                        bold = true;\n                        break;\n                    case 4:\n                        underline = true;\n                        break;\n                    case 7:\n                        inverse = true;\n                        break;\n                    case 21:\n                    case 22:\n                        bold = false;\n                        break;\n                    case 24:\n                        underline = false;\n                        break;\n                    case 27:\n                        inverse = false;\n                        break;\n                    case 30:\n                    case 31:\n                    case 32:\n                    case 33:\n                    case 34:\n                    case 35:\n                    case 36:\n                    case 37:\n                        fg = n - 30;\n                        break;\n                    case 38:\n                        try {\n                            fg = getExtendedColors(numbers);\n                        }\n                        catch (e) {\n                            numbers.length = 0;\n                        }\n                        break;\n                    case 39:\n                        fg = [];\n                        break;\n                    case 40:\n                    case 41:\n                    case 42:\n                    case 43:\n                    case 44:\n                    case 45:\n                    case 46:\n                    case 47:\n                        bg = n - 40;\n                        break;\n                    case 48:\n                        try {\n                            bg = getExtendedColors(numbers);\n                        }\n                        catch (e) {\n                            numbers.length = 0;\n                        }\n                        break;\n                    case 49:\n                        bg = [];\n                        break;\n                    case 90:\n                    case 91:\n                    case 92:\n                    case 93:\n                    case 94:\n                    case 95:\n                    case 96:\n                    case 97:\n                        fg = n - 90 + 8;\n                        break;\n                    case 100:\n                    case 101:\n                    case 102:\n                    case 103:\n                    case 104:\n                    case 105:\n                    case 106:\n                    case 107:\n                        bg = n - 100 + 8;\n                        break;\n                    default:\n                    // Unknown codes are ignored\n                }\n            }\n        }\n        return out.join('');\n    }\n    Private.ansiSpan = ansiSpan;\n})(Private || (Private = {}));\n//# sourceMappingURL=renderers.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { Token } from '@lumino/coreutils';\n/* tslint:disable */\n/**\n * The rendermime token.\n */\nexport const IRenderMimeRegistry = new Token('@jupyterlab/rendermime:IRenderMimeRegistry');\n/* tslint:enable */\n/* tslint:disable */\n/**\n * The latex typesetter token.\n */\nexport const ILatexTypesetter = new Token('@jupyterlab/rendermime:ILatexTypesetter');\n/* tslint:enable */\n//# sourceMappingURL=tokens.js.map","import { nullTranslator } from '@jupyterlab/translation';\nimport { Widget } from '@lumino/widgets';\nimport * as renderers from './renderers';\n/**\n * A common base class for mime renderers.\n */\nexport class RenderedCommon extends Widget {\n    /**\n     * Construct a new rendered common widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super();\n        this.mimeType = options.mimeType;\n        this.sanitizer = options.sanitizer;\n        this.resolver = options.resolver;\n        this.linkHandler = options.linkHandler;\n        this.translator = options.translator || nullTranslator;\n        this.latexTypesetter = options.latexTypesetter;\n        this.node.dataset['mimeType'] = this.mimeType;\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     *\n     * #### Notes\n     * If the DOM node for this widget already has content, it is emptied\n     * before rendering. Subclasses that do not want this behavior\n     * (if, for instance, they are using DOM diffing), should override\n     * this method and not call `super.renderModel()`.\n     */\n    async renderModel(model) {\n        // TODO compare model against old model for early bail?\n        // Empty any existing content in the node from previous renders\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        // Toggle the trusted class on the widget.\n        this.toggleClass('jp-mod-trusted', model.trusted);\n        // Render the actual content.\n        await this.render(model);\n        // Handle the fragment identifier if given.\n        const { fragment } = model.metadata;\n        if (fragment) {\n            this.setFragment(fragment);\n        }\n    }\n    /**\n     * Set the URI fragment identifier.\n     *\n     * @param fragment - The URI fragment identifier.\n     */\n    setFragment(fragment) {\n        /* no-op */\n    }\n}\n/**\n * A common base class for HTML mime renderers.\n */\nexport class RenderedHTMLCommon extends RenderedCommon {\n    /**\n     * Construct a new rendered HTML common widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedHTMLCommon');\n    }\n    setFragment(fragment) {\n        let el;\n        try {\n            el = this.node.querySelector(fragment);\n        }\n        catch (error) {\n            console.warn('Unable to set URI fragment identifier.', error);\n        }\n        if (el) {\n            el.scrollIntoView();\n        }\n    }\n}\n/**\n * A mime renderer for displaying HTML and math.\n */\nexport class RenderedHTML extends RenderedHTMLCommon {\n    /**\n     * Construct a new rendered HTML widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedHTML');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderHTML({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            trusted: model.trusted,\n            resolver: this.resolver,\n            sanitizer: this.sanitizer,\n            linkHandler: this.linkHandler,\n            shouldTypeset: this.isAttached,\n            latexTypesetter: this.latexTypesetter,\n            translator: this.translator\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A mime renderer for displaying LaTeX output.\n */\nexport class RenderedLatex extends RenderedCommon {\n    /**\n     * Construct a new rendered LaTeX widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedLatex');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderLatex({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            shouldTypeset: this.isAttached,\n            latexTypesetter: this.latexTypesetter\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A mime renderer for displaying images.\n */\nexport class RenderedImage extends RenderedCommon {\n    /**\n     * Construct a new rendered image widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedImage');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        const metadata = model.metadata[this.mimeType];\n        return renderers.renderImage({\n            host: this.node,\n            mimeType: this.mimeType,\n            source: String(model.data[this.mimeType]),\n            width: metadata && metadata.width,\n            height: metadata && metadata.height,\n            needsBackground: model.metadata['needs_background'],\n            unconfined: metadata && metadata.unconfined\n        });\n    }\n}\n/**\n * A mime renderer for displaying Markdown with embedded latex.\n */\nexport class RenderedMarkdown extends RenderedHTMLCommon {\n    /**\n     * Construct a new rendered markdown widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedMarkdown');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderMarkdown({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            trusted: model.trusted,\n            resolver: this.resolver,\n            sanitizer: this.sanitizer,\n            linkHandler: this.linkHandler,\n            shouldTypeset: this.isAttached,\n            latexTypesetter: this.latexTypesetter,\n            translator: this.translator\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A widget for displaying SVG content.\n */\nexport class RenderedSVG extends RenderedCommon {\n    /**\n     * Construct a new rendered SVG widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedSVG');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        const metadata = model.metadata[this.mimeType];\n        return renderers.renderSVG({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            trusted: model.trusted,\n            unconfined: metadata && metadata.unconfined,\n            translator: this.translator\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A widget for displaying plain text and console text.\n */\nexport class RenderedText extends RenderedCommon {\n    /**\n     * Construct a new rendered text widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedText');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderText({\n            host: this.node,\n            sanitizer: this.sanitizer,\n            source: String(model.data[this.mimeType]),\n            translator: this.translator\n        });\n    }\n}\n/**\n * A widget for displaying JavaScript output.\n */\nexport class RenderedJavaScript extends RenderedCommon {\n    /**\n     * Construct a new rendered text widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedJavaScript');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        const trans = this.translator.load('jupyterlab');\n        return renderers.renderText({\n            host: this.node,\n            sanitizer: this.sanitizer,\n            source: trans.__('JavaScript output is disabled in JupyterLab'),\n            translator: this.translator\n        });\n    }\n}\n//# sourceMappingURL=widgets.js.map","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n\n  function createCommonjsModule(fn) {\n    var module = { exports: {} };\n  \treturn fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation,\n    repeatString: repeatString\n  };\n\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim$1(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked,\n            endMatch;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item;\n\n          if (!this.options.pedantic) {\n            // Determine if current item contains the end of the list\n            endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n\n            if (endMatch) {\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              item = item.substring(0, endMatch.index);\n              raw = item;\n              l = i + 1;\n            }\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list or continuation\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else if ( // different bullet style\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n              addBack = itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              i = l - 1;\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // trim item newlines at end\n\n\n          item = rtrim$1(item, '\\n');\n\n          if (i !== l - 1) {\n            raw = raw + '\\n';\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n\n          if (i !== l - 1) {\n            next = raw.slice(-2) === '\\n\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim$1(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.listItemStart = edit$1(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit$1(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit$1(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit$1(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit$1(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit$1(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit$1(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  var repeatString$1 = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    try {\n      var tokens = Lexer_1.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match HTML entities and HTML characters. */\nvar reUnescapedHtml = /[&<>\"'`]/g,\n    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n/** Used to map characters to HTML entities. */\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '`': '&#96;'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.escape` to convert characters to HTML entities.\n *\n * @private\n * @param {string} chr The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nvar escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n * their corresponding HTML entities.\n *\n * **Note:** No other characters are escaped. To escape additional\n * characters use a third-party library like [_he_](https://mths.be/he).\n *\n * Though the \">\" character is escaped for symmetry, characters like\n * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n * unless they're part of a tag or unquoted attribute value. See\n * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n * (under \"semi-related fun fact\") for more details.\n *\n * Backticks are escaped because in IE < 9, they can break out of\n * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n * [#133](https://html5sec.org/#133) of the\n * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n *\n * When working with HTML you should always\n * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n * XSS vectors.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escape('fred, barney, & pebbles');\n * // => 'fred, barney, &amp; pebbles'\n */\nfunction escape(string) {\n  string = toString(string);\n  return (string && reHasUnescapedHtml.test(string))\n    ? string.replace(reUnescapedHtml, escapeHtmlChar)\n    : string;\n}\n\nmodule.exports = escape;\n"],"sourceRoot":""}